// Code generated by "shoot new -getset -json -file=client.go"; DO NOT EDIT.

package myclient

import "encoding/json"

// NewKV constructs a new instance of type KV
func NewKV(key string, value string) *KV {
	return &KV{
		key:   key,
		value: value,
	}
}

// Key gets the value of field key
func (k *KV) Key() string {
	return k.key
}

// Value gets the value of field value
func (k *KV) Value() string {
	return k.value
}

// SetKey sets the value of field key
func (k *KV) SetKey(key_ string) {
	k.key = key_
}

// SetValue sets the value of field value
func (k *KV) SetValue(value_ string) {
	k.value = value_
}

type _KV_marshal struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}
type _KV_unmarshal struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// MarshalJSON serializes type KV to json bytes
func (k KV) MarshalJSON() ([]byte, error) {
	data := _KV_marshal{
		Key:   k.Key(),
		Value: k.Value(),
	}
	return json.Marshal(data)
}

// UnmarshalJSON deserializes json bytes to type KV
func (k *KV) UnmarshalJSON(data []byte) error {
	var kV_ _KV_unmarshal
	if err := json.Unmarshal(data, &kV_); err != nil {
		return err
	}
	k.SetKey(kV_.Key)
	k.SetValue(kV_.Value)

	return nil
}

// ShootNew exists solely to fulfill the NewShooter interface contract
func (k KV) ShootNew() { /*noop*/ }
