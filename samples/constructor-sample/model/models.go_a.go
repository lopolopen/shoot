// Code generated by "shoot new -getset -opt -json models.go"; DO NOT EDIT.

package model

import "encoding/json"

// NewA constructs a new instance of type A
func NewA(a string) *A {
	return &A{
		a: a,
	}
}

// With initializes this instance using the functional options pattern
func (a *A) With(opts ..._opt_[A, *A]) *A {
	a._def_()
	for _, opt := range opts {
		opt(a)
	}
	return a
}

func AOfA(a_ string) _opt_[A, *A] {
	return func(a *A) {
		a.a = a_
	}
}

func (a *A) _def_() {

}

// A gets the value of field a
func (a *A) A() string {
	return a.a
}

// SetA sets the value of field a
func (a *A) SetA(a_ string) {
	a.a = a_
}

type _A_marshal struct {
	A string `json:"a"`
}

type _A_unmarshal struct {
	A string `json:"a"`
}

// MarshalJSON serializes type A to json bytes
func (a A) MarshalJSON() ([]byte, error) {
	data := _A_marshal{
		A: a.A(),
	}
	return json.Marshal(data)
}

// UnmarshalJSON deserializes json bytes to type A
func (a *A) UnmarshalJSON(data []byte) error {
	var a_ _A_unmarshal
	if err := json.Unmarshal(data, &a_); err != nil {
		return nil
	}

	a.SetA(a_.A)
	return nil
}
