// Code generated by "shoot new -getset -json class.go"; DO NOT EDIT.

package dto

import "encoding/json"

// NewClass constructs a new instance of type Class
func NewClass(id int, name string) *Class {
	return &Class{
		id:   id,
		name: name,
	}
}

// Id gets the value of field id
func (c *Class) Id() int {
	return c.id
}

// Name gets the value of field name
func (c *Class) Name() string {
	return c.name
}

// SetId sets the value of field id
func (c *Class) SetId(id_ int) {
	c.id = id_
}

// SetName sets the value of field name
func (c *Class) SetName(name_ string) {
	c.name = name_
}

type _Class_marshal struct {
	Id int `json:"id"`

	Name string `json:"name"`
}

type _Class_unmarshal struct {
	Id int `json:"id"`

	Name string `json:"name"`
}

// MarshalJSON serializes type Class to json bytes
func (c Class) MarshalJSON() ([]byte, error) {
	data := _Class_marshal{

		Id:   c.Id(),
		Name: c.Name(),
	}
	return json.Marshal(data)
}

// UnmarshalJSON deserializes json bytes to type Class
func (c *Class) UnmarshalJSON(data []byte) error {
	var class_ _Class_unmarshal
	if err := json.Unmarshal(data, &class_); err != nil {
		return nil
	}

	c.SetId(class_.Id)
	c.SetName(class_.Name)
	return nil
}
