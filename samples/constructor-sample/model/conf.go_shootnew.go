// Code generated by "shoot new -getset -opt -file=conf.go"; DO NOT EDIT.

package model

import "github.com/lopolopen/shoot"

// NewConf constructs a new instance of type Conf
func NewConf(name string) *Conf {
	return &Conf{
		name: name,
	}
}

// With initializes this instance using the functional options pattern
func (c *Conf) With(opts ...shoot.Option[Conf, *Conf]) *Conf {
	c.SetDefault()
	for _, opt := range opts {
		opt(c)
	}
	return c
}

// NameOfConf is a configuration for the filed name
func NameOfConf(name_ string) shoot.Option[Conf, *Conf] {
	return func(c *Conf) {
		c.name = name_
	}
}

// HostOfConf is a configuration for the filed host
func HostOfConf(host_ []string) shoot.Option[Conf, *Conf] {
	return func(c *Conf) {
		c.host = host_
	}
}

// PortOfConf is a configuration for the filed port
func PortOfConf(port_ int) shoot.Option[Conf, *Conf] {
	return func(c *Conf) {
		c.port = port_
	}
}

// SetDefault sets the default values
func (c *Conf) SetDefault() {
	c.port = 80
}

// Name gets the value of field name
func (c *Conf) Name() string {
	return c.name
}

// Host gets the value of field host
func (c *Conf) Host() []string {
	return c.host
}

// Port gets the value of field port
func (c *Conf) Port() int {
	return c.port
}

// SetName sets the value of field name
func (c *Conf) SetName(name_ string) {
	c.name = name_
}

// SetHost sets the value of field host
func (c *Conf) SetHost(host_ []string) {
	c.host = host_
}

// SetPort sets the value of field port
func (c *Conf) SetPort(port_ int) {
	c.port = port_
}
