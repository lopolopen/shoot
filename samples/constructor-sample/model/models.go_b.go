// Code generated by "shoot new -getset -opt -json models.go"; DO NOT EDIT.

package model

import "encoding/json"

// NewB constructs a new instance of type B
func NewB(b string) *B {
	return &B{
		b: b,
	}
}

// With initializes this instance using the functional options pattern
func (b *B) With(opts ..._opt_[B, *B]) *B {
	b._def_()
	for _, opt := range opts {
		opt(b)
	}
	return b
}

func BOfB(b_ string) _opt_[B, *B] {
	return func(b *B) {
		b.b = b_
	}
}

func (b *B) _def_() {

}

// B gets the value of field b
func (b *B) B() string {
	return b.b
}

// SetB sets the value of field b
func (b *B) SetB(b_ string) {
	b.b = b_
}

type _B_marshal struct {
	B string `json:"b"`
}

type _B_unmarshal struct {
	B string `json:"b"`
}

// MarshalJSON serializes type B to json bytes
func (b B) MarshalJSON() ([]byte, error) {
	data := _B_marshal{
		B: b.B(),
	}
	return json.Marshal(data)
}

// UnmarshalJSON deserializes json bytes to type B
func (b *B) UnmarshalJSON(data []byte) error {
	var b_ _B_unmarshal
	if err := json.Unmarshal(data, &b_); err != nil {
		return nil
	}

	b.SetB(b_.B)
	return nil
}
