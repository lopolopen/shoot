// Code generated by "shoot new -getset -opt -json models.go"; DO NOT EDIT.

package model

import "encoding/json"

// NewC constructs a new instance of type C
func NewC(c string) *C {
	return &C{
		c: c,
	}
}

// With initializes this instance using the functional options pattern
func (c *C) With(opts ..._opt_[C, *C]) *C {
	c._def_()
	for _, opt := range opts {
		opt(c)
	}
	return c
}

func COfC(c_ string) _opt_[C, *C] {
	return func(c *C) {
		c.c = c_
	}
}

func (c *C) _def_() {

}

// C gets the value of field c
func (c *C) C() string {
	return c.c
}

// SetC sets the value of field c
func (c *C) SetC(c_ string) {
	c.c = c_
}

type _C_marshal struct {
	C string `json:"c"`
}

type _C_unmarshal struct {
	C string `json:"c"`
}

// MarshalJSON serializes type C to json bytes
func (c C) MarshalJSON() ([]byte, error) {
	data := _C_marshal{
		C: c.C(),
	}
	return json.Marshal(data)
}

// UnmarshalJSON deserializes json bytes to type C
func (c *C) UnmarshalJSON(data []byte) error {
	var c_ _C_unmarshal
	if err := json.Unmarshal(data, &c_); err != nil {
		return nil
	}

	c.SetC(c_.C)
	return nil
}
